******************
*   PROBLEM 1    *
******************

fib:
  SUBI SP, SP, #24              // adjust stack for 3 items
  STUR LR, [SP, #8]             // save the return address
  STUR X0, [SP, #0]             // save the argument x

  SUBS XZR, X0, XZR             // compare x to 0
  B.NE L1                       // If x != 0, go to L1
  ADDI X1, XZR, #0              // return 0
  ADDI SP, SP, #24              // pop 3 items off the stack
  BR LR                         // return to caller

L1:
  SUBIS XZR, X0, #2             // compare x to 2
  B.GT L2                       // if x > 2, go to L2
  ADDI X1, XZR, #1              // return 1
  ADDI SP, SP, #24              // pop 3 items off the stack
  BR LR                         // return to caller

L2:
  SUBI X0, X0, #1               // function argument : x-1
  BL fib                        // call fib with argument x-1

  STUR X1, [SP, #16]            // return to BL, save fib(x-1) in stack
  LDUR X0, [SP, #0]             // restore argument x
  SUBI X0, X0, #2               // function argument : x-2
  BL fib                        // call fib with argument x-2

  ADDI X9, X1, #0               // return to BL, load fib(x-1) value into temp reg X9
  ADD X0, X0, X9                // add fib(x-1) and fib(x-2)
  LDUR X0, [SP, #0]             // restore argument x
  LDUR LR, [SP, #8]             // restore the return address
  ADDI SP, SP, #24              // pop 3 items off the stack
  BR LR                         // return to caller

main:
  ADDI X19, XZR, #6             //long long int i = 6

while:
  SUBIS XZR, X19, #20           //compare i to 20
  B.GE exit                     //go to exit if i >= 20

  B fib                         //go to fib
  ADDI X19, X19, #1             //i++
  B while                       //loop back to while

exit:

******************
*   PROBLEM 2    *
******************

int main(){
  long long int i = 6;
  long long int fib = 0;

  while(i<20){
    fib = (1/sqrt(5))*(((1+sqrt(5)/2)^i) - ((1-sqrt(5)/2)^i))
    i++;
  }
}

main:
  ADDI X19, XZR, #6             //i = 6
  ADD X20, XZR, XZR             //fib = 0

while:
  SUBIS XZR, X19, #20           //compare i to 20
  B.GE exit                     //go to exit if i >= 20

  FSQRTI X9, #5                 //sqrt(5)
  ADDI X10, X9, #1              //1+sqrt(5)
  UDIVI X11, X10, #2            //1+sqrt(5)/2
  LSL X12, X11, X19             //(1+sqrt(5)/2)^i

  SUBI X13, X9, #1              //1-sqrt(5)
  UDIVI X14, X13, #2            //1-sqrt(5)/2
  LSL X15, X14, X19             //(1-sqrt(5)/2)^i

  SUB X16, X12, X15             //((1+sqrt(5)/2)^i) - ((1-sqrt(5)/2)^i)

  UDIVI X17, X9, #1             //1/sqrt(5)
  MUL X20, X17, X16             //(1/sqrt(5))*(((1+sqrt(5)/2)^i) - ((1-sqrt(5)/2)^i))

  ADDI X19, X19, #1             //i++

  B while

exit:
